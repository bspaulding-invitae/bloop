name: Continuous Integration
on:
  push:
    tags:
      - v1.*
      - v2.*
    branches:
      - master
      - duplicate-project-names-werk
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        jdk: [graalvm-ce-java11@20.1.0, adopt@1.11]
    name: Test ${{ matrix.os }} -- ${{ matrix.jdk }}
    env:
      HYDRA_LICENSE: ${{ secrets.HYDRA_LICENSE }}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: ${{ matrix.jdk }}
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Set up environment
        run: |
          curl -Lo coursier https://git.io/coursier-cli && chmod +x coursier && ./coursier --help
          yarn --help
          java -version
          [[ $HYDRA_LICENSE == floating-key=* ]] && mkdir -p $HOME/.triplequote && echo "$HYDRA_LICENSE" > "$HOME/.triplequote/hydra.license" || echo "Hydra license file was not created"
        shell: bash
      - name: Check formatting
        if: matrix.os != 'windows-latest'
        run: |
          ./bin/sbt-ci.sh \
              "scalafmtCheckAll" \
        shell: bash
      - name: Compile and test main projects
        run: |
          ./bin/sbt-ci.sh \
              "frontend/test:compile" \
              "sbtBloop013/compile" \
              "sbtBloop10/compile" \
              "millBloop/compile" \
              "mavenBloop/compile" \
              "backend/test" \
              "docs/compile" \
              "jsBridge06/publishLocal" \
              "jsBridge10/publishLocal" \
              "frontend/testOnly bloop.ScalaVersionsSpec" \
              "frontend/testOnly -bloop.ScalaVersionsSpec" \
              "jsBridge06/test" \
              "jsBridge10/test" \
              "frontend/runMain bloop.util.CommandsDocGenerator --test" \
              "frontend/runMain bloop.util.CommandsDocGenerator --out ../docs/cli/reference.md"
        shell: bash
      - name: Check docs are up-to-date
        run: |
          ./bin/check-good-practices.sh
        shell: bash
      - name: Run launcher tests
        if: matrix.jdk == 'graalvm-ce-java11@20.1.0'
        run: |
          echo $JAVA_HOME
          which gu && gu install native-image
          ./bin/sbt-ci.sh "install" "launcher/test"
        shell: bash
      - name: Run build tool + native tests
        if: matrix.jdk == 'graalvm-ce-java11@20.1.0' && matrix.os != 'windows-latest'
        run: |
          ./bin/sbt-ci.sh \
              "millBloop/compile" \
              "mavenBloop/compile" \
              "gradleBloop211/compile" \
              "gradleBloop212/compile" \
              "gradleBloop212/test" \
              "sbtBloop10Shaded/publishLocal" \
              "sbtBloop10/scripted" \
              "benchmarks/jmh:run .*HotBloopBenchmark.* -wi 0 -i 1 -f1 -t1 -p project=with-tests -p projectName=with-tests"
        shell: bash

